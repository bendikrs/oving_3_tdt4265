
--------------------------------------------------------------------task3_model1_Thu_14_48
Final validation accuracy 0.7116000056266785
Final train accuracy 0.8150560259819031
Final test accuracy 0.705299973487854
Model1(
  (model): Sequential(
    (conv1): Conv2d(3, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (relu1): ReLU()
    (maxPool1): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (conv2): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
    (relu2): ReLU()
    (conv3): Conv2d(64, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (relu3): ReLU()
    (maxPool3): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (flattern): Flatten(start_dim=1, end_dim=-1)
    (fc1): Linear(in_features=2048, out_features=64, bias=True)
    (relu4): ReLU()
    (out): Linear(in_features=64, out_features=10, bias=True)
  )
)
--------------------------------------------------------------------



--------------------------------------------------------------------task3_model1_Thu_14_57
Final validation accuracy 0.7116000056266785
Final train accuracy 0.8150560259819031
Final test accuracy 0.705299973487854
Model1(
  (model): Sequential(
    (conv1): Conv2d(3, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (relu1): ReLU()
    (maxPool1): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (conv2): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
    (relu2): ReLU()
    (conv3): Conv2d(64, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (relu3): ReLU()
    (maxPool3): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (flattern): Flatten(start_dim=1, end_dim=-1)
    (fc1): Linear(in_features=2048, out_features=64, bias=True)
    (relu4): ReLU()
    (out): Linear(in_features=64, out_features=10, bias=True)
  )
)
--------------------------------------------------------------------



--------------------------------------------------------------------task3_model1_Thu_15_06
Final validation accuracy 0.7281999588012695
Final train accuracy 0.8378155827522278
Final test accuracy 0.7185999751091003
Model1(
  (model): Sequential(
    (conv1): Conv2d(3, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (relu1): ReLU()
    (maxPool1): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (conv2): Conv2d(64, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (relu2): ReLU()
    (maxPool2): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (conv3): Conv2d(128, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
    (relu3): ReLU()
    (flattern): Flatten(start_dim=1, end_dim=-1)
    (fc1): Linear(in_features=4096, out_features=64, bias=True)
    (relu4): ReLU()
    (out): Linear(in_features=64, out_features=10, bias=True)
  )
)
--------------------------------------------------------------------



--------------------------------------------------------------------task3_model1_Thu_15_13
Final validation accuracy 0.7325999736785889
Final train accuracy 0.881912350654602
Final test accuracy 0.7263000011444092
Model1(
  (model): Sequential(
    (conv1): Conv2d(3, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (relu1): ReLU()
    (maxPool1): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (conv2): Conv2d(64, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (relu2): ReLU()
    (maxPool2): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (flattern): Flatten(start_dim=1, end_dim=-1)
    (fc1): Linear(in_features=8192, out_features=64, bias=True)
    (relu4): ReLU()
    (out): Linear(in_features=64, out_features=10, bias=True)
  )
)
--------------------------------------------------------------------



--------------------------------------------------------------------task3_model1_Thu_15_21
Final validation accuracy 0.6991999745368958
Final train accuracy 0.8533072471618652
Final test accuracy 0.7135999798774719
Model1(
  (model): Sequential(
    (conv1): Conv2d(3, 64, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2))
    (relu1): ReLU()
    (maxPool1): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (conv2): Conv2d(64, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (relu2): ReLU()
    (maxPool2): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (flattern): Flatten(start_dim=1, end_dim=-1)
    (fc1): Linear(in_features=8192, out_features=64, bias=True)
    (relu4): ReLU()
    (out): Linear(in_features=64, out_features=10, bias=True)
  )
)
--------------------------------------------------------------------



--------------------------------------------------------------------task3_model1_Tue_18_25
Final validation accuracy 0.7755999565124512
Final train accuracy 0.9051333665847778
Final test accuracy 0.7656999826431274
Batch size: 50, Learning rate: 0.02
Optimizer: Average SGD, weight decay = 0.001 
Model1(
  (model): Sequential(
    (conv1): Conv2d(3, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (relu1): ReLU()
    (maxPool1): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (conv2): Conv2d(32, 64, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2))
    (relu2): ReLU()
    (avgPool1): AvgPool2d(kernel_size=2, stride=2, padding=0)
    (conv3): Conv2d(64, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (batchNorm1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (maxPool3): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (conv4): Conv2d(128, 256, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2))
    (relu4): ReLU()
    (flattern): Flatten(start_dim=1, end_dim=-1)
    (fc1): Linear(in_features=4096, out_features=128, bias=True)
    (relu5): ReLU()
    (fc2): Linear(in_features=128, out_features=64, bias=True)
    (relu6): ReLU()
    (out): Linear(in_features=64, out_features=10, bias=True)
  )
)
--------------------------------------------------------------------



--------------------------------------------------------------------task3_model1_Tue_18_35
Final validation accuracy 0.7281999588012695
Final train accuracy 0.8074889183044434
Final test accuracy 0.7263000011444092
Batch size: 50, Learning rate: 0.02
Optimizer: Average SGD, weight decay = 0.001 
Model1(
  (model): Sequential(
    (conv1): Conv2d(3, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (batchNorm1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (relu1): ReLU()
    (maxPool1): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (conv2): Conv2d(32, 64, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2))
    (batchNorm2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (relu2): ReLU()
    (avgPool1): AvgPool2d(kernel_size=2, stride=2, padding=0)
    (conv3): Conv2d(64, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (batchNorm3): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (relu3): ReLU()
    (maxPool3): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (conv4): Conv2d(128, 256, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2))
    (batchNorm4): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (relu4): ReLU()
    (flattern): Flatten(start_dim=1, end_dim=-1)
    (fc1): Linear(in_features=4096, out_features=128, bias=True)
    (relu5): ReLU()
    (fc2): Linear(in_features=128, out_features=64, bias=True)
    (relu6): ReLU()
    (out): Linear(in_features=64, out_features=10, bias=True)
  )
)
--------------------------------------------------------------------



--------------------------------------------------------------------task3_model1_Tue_18_42
Final validation accuracy 0.7269999980926514
Final train accuracy 0.7980889081954956
Final test accuracy 0.7184999585151672
Batch size: 50, Learning rate: 0.015
Optimizer: Average SGD, weight decay = 0.001 
Model1(
  (model): Sequential(
    (conv1): Conv2d(3, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (batchNorm1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (relu1): ReLU()
    (maxPool1): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (conv2): Conv2d(32, 64, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2))
    (batchNorm2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (relu2): ReLU()
    (avgPool1): AvgPool2d(kernel_size=2, stride=2, padding=0)
    (conv3): Conv2d(64, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (batchNorm3): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (relu3): ReLU()
    (maxPool3): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (conv4): Conv2d(128, 256, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2))
    (batchNorm4): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (relu4): ReLU()
    (flattern): Flatten(start_dim=1, end_dim=-1)
    (fc1): Linear(in_features=4096, out_features=128, bias=True)
    (relu5): ReLU()
    (fc2): Linear(in_features=128, out_features=64, bias=True)
    (relu6): ReLU()
    (out): Linear(in_features=64, out_features=10, bias=True)
  )
)
--------------------------------------------------------------------



--------------------------------------------------------------------task3_model1_Tue_18_49
Final validation accuracy 0.776199996471405
Final train accuracy 0.8908222317695618
Final test accuracy 0.769599974155426
Batch size: 50, Learning rate: 0.02
Optimizer: Average SGD, weight decay = 0.001 
Model1(
  (model): Sequential(
    (conv1): Conv2d(3, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (relu1): ReLU()
    (maxPool1): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (conv2): Conv2d(32, 64, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2))
    (relu2): ReLU()
    (avgPool1): AvgPool2d(kernel_size=2, stride=2, padding=0)
    (conv3): Conv2d(64, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (batchNorm3): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (relu3): ReLU()
    (maxPool3): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (conv4): Conv2d(128, 256, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2))
    (relu4): ReLU()
    (flattern): Flatten(start_dim=1, end_dim=-1)
    (fc1): Linear(in_features=4096, out_features=128, bias=True)
    (relu5): ReLU()
    (fc2): Linear(in_features=128, out_features=64, bias=True)
    (relu6): ReLU()
    (out): Linear(in_features=64, out_features=10, bias=True)
  )
)
--------------------------------------------------------------------



--------------------------------------------------------------------task3_model1_Tue_18_57
Final validation accuracy 0.710599958896637
Final train accuracy 0.7442666888237
Final test accuracy 0.708299994468689
Batch size: 50, Learning rate: 0.02
Optimizer: Average SGD, weight decay = 0.001 
Model1(
  (model): Sequential(
    (conv1): Conv2d(3, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (relu1): ReLU()
    (maxPool1): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (dropout1): Dropout2d(p=0.2, inplace=False)
    (conv2): Conv2d(32, 64, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2))
    (relu2): ReLU()
    (avgPool1): AvgPool2d(kernel_size=2, stride=2, padding=0)
    (dropout2): Dropout2d(p=0.2, inplace=False)
    (conv3): Conv2d(64, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (batchNorm3): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (relu3): ReLU()
    (maxPool3): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (dropout3): Dropout2d(p=0.2, inplace=False)
    (conv4): Conv2d(128, 256, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2))
    (relu4): ReLU()
    (dropout4): Dropout2d(p=0.2, inplace=False)
    (flattern): Flatten(start_dim=1, end_dim=-1)
    (fc1): Linear(in_features=4096, out_features=128, bias=True)
    (relu5): ReLU()
    (dropout5): Dropout2d(p=0.3, inplace=False)
    (fc2): Linear(in_features=128, out_features=64, bias=True)
    (relu6): ReLU()
    (dropout6): Dropout2d(p=0.2, inplace=False)
    (out): Linear(in_features=64, out_features=10, bias=True)
  )
)
--------------------------------------------------------------------



--------------------------------------------------------------------task3_model1_Tue_19_14
Final validation accuracy 0.7739999890327454
Final train accuracy 0.8972889184951782
Final test accuracy 0.7622999548912048
Batch size: 50, Learning rate: 0.02
Optimizer: Average SGD, weight decay = 0.001 
Model1(
  (model): Sequential(
    (conv1): Conv2d(3, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (relu1): ReLU()
    (maxPool1): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (conv2): Conv2d(32, 64, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2))
    (relu2): ReLU()
    (avgPool1): AvgPool2d(kernel_size=2, stride=2, padding=0)
    (conv3): Conv2d(64, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (batchNorm3): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (maxPool3): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (conv4): Conv2d(128, 256, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2))
    (relu4): ReLU()
    (flattern): Flatten(start_dim=1, end_dim=-1)
    (fc1): Linear(in_features=4096, out_features=128, bias=True)
    (relu5): ReLU()
    (fc2): Linear(in_features=128, out_features=64, bias=True)
    (relu6): ReLU()
    (out): Linear(in_features=64, out_features=10, bias=True)
  )
)
--------------------------------------------------------------------



--------------------------------------------------------------------task3_model1_Tue_19_40
Final validation accuracy 0.7669999599456787
Final train accuracy 0.8938444256782532
Final test accuracy 0.760699987411499
Final train loss 0.2971002459526062
Batch size: 50, Learning rate: 0.02
Optimizer: Average SGD, weight decay = 0.001 
Model1(
  (model): Sequential(
    (conv1): Conv2d(3, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (relu1): ReLU()
    (maxPool1): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (conv2): Conv2d(32, 64, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2))
    (relu2): ReLU()
    (avgPool1): AvgPool2d(kernel_size=2, stride=2, padding=0)
    (conv3): Conv2d(64, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (batchNorm3): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (maxPool3): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (conv4): Conv2d(128, 256, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2))
    (relu4): ReLU()
    (flattern): Flatten(start_dim=1, end_dim=-1)
    (fc1): Linear(in_features=4096, out_features=128, bias=True)
    (relu5): ReLU()
    (fc2): Linear(in_features=128, out_features=64, bias=True)
    (relu6): ReLU()
    (out): Linear(in_features=64, out_features=10, bias=True)
  )
)
--------------------------------------------------------------------



--------------------------------------------------------------------task3_model1_Tue_19_56
Final validation accuracy 0.7529999613761902
Final train accuracy 0.8524667024612427
Final test accuracy 0.7507999539375305
Final train loss 0.41281238198280334
Batch size: 50, Learning rate: 0.02
Optimizer: Average SGD, weight decay = 0.001 
Model1(
  (model): Sequential(
    (conv1): Conv2d(3, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (relu1): ReLU()
    (maxPool1): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (conv2): Conv2d(32, 64, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2))
    (relu2): ReLU()
    (avgPool1): AvgPool2d(kernel_size=2, stride=2, padding=0)
    (conv3): Conv2d(64, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (batchNorm3): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (maxPool3): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (conv4): Conv2d(128, 256, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2))
    (relu4): ReLU()
    (flattern): Flatten(start_dim=1, end_dim=-1)
    (fc1): Linear(in_features=4096, out_features=128, bias=True)
    (relu5): ReLU()
    (fc2): Linear(in_features=128, out_features=64, bias=True)
    (relu6): ReLU()
    (out): Linear(in_features=64, out_features=10, bias=True)
  )
)
--------------------------------------------------------------------



--------------------------------------------------------------------task4a_model_Wed_11_08
Final validation accuracy 0.9083999991416931
Final train accuracy 0.9875977635383606
Final test accuracy 0.8995999693870544
Final train loss 0.03867751732468605
Batch size: 32, Learning rate: 0.0005
Optimizer: Adam Optimizer 
Model4a(
  (model): ResNet(
    (conv1): Conv2d(3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False)
    (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (relu): ReLU(inplace=True)
    (maxpool): MaxPool2d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (layer1): Sequential(
      (0): BasicBlock(
        (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): BasicBlock(
        (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (layer2): Sequential(
      (0): BasicBlock(
        (conv1): Conv2d(64, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (downsample): Sequential(
          (0): Conv2d(64, 128, kernel_size=(1, 1), stride=(2, 2), bias=False)
          (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): BasicBlock(
        (conv1): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (layer3): Sequential(
      (0): BasicBlock(
        (conv1): Conv2d(128, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (downsample): Sequential(
          (0): Conv2d(128, 256, kernel_size=(1, 1), stride=(2, 2), bias=False)
          (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): BasicBlock(
        (conv1): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (layer4): Sequential(
      (0): BasicBlock(
        (conv1): Conv2d(256, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (downsample): Sequential(
          (0): Conv2d(256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False)
          (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): BasicBlock(
        (conv1): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (avgpool): AdaptiveAvgPool2d(output_size=(1, 1))
    (fc): Linear(in_features=512, out_features=10, bias=True)
  )
)
--------------------------------------------------------------------



--------------------------------------------------------------------task3_model2_Thu_13_20
Final validation accuracy 0.7537999749183655
Final train accuracy 0.8916473984718323
Final test accuracy 0.7473999857902527
Final train loss 0.544032096862793
Batch size: 64, Learning rate: 0.05
Optimizer: Average SGD, weight decay = 0.001 
Model2(
  (model): Sequential(
    (conv1): Conv2d(3, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (relu1): ReLU()
    (maxPool1): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (conv2): Conv2d(32, 64, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2))
    (relu2): ReLU()
    (maxPool2): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (conv3): Conv2d(64, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (relu3): ReLU()
    (maxPool3): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (conv4): Conv2d(128, 256, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2))
    (relu4): ReLU()
    (flattern): Flatten(start_dim=1, end_dim=-1)
    (fc1): Linear(in_features=4096, out_features=128, bias=True)
    (relu5): ReLU()
    (fc2): Linear(in_features=128, out_features=64, bias=True)
    (relu6): ReLU()
    (out): Linear(in_features=64, out_features=10, bias=True)
  )
)
--------------------------------------------------------------------



--------------------------------------------------------------------task3_model2_Thu_13_29
Final validation accuracy 0.7649999856948853
Final train accuracy 0.8836237192153931
Final test accuracy 0.7626999616622925
Final train loss 0.3490644693374634
Batch size: 64, Learning rate: 0.05
Optimizer: Average SGD, weight decay = 0.001 
Model2(
  (model): Sequential(
    (conv1): Conv2d(3, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (relu1): ReLU()
    (maxPool1): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (conv2): Conv2d(64, 128, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2))
    (relu2): ReLU()
    (maxPool2): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (conv3): Conv2d(128, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (relu3): ReLU()
    (maxPool3): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (flattern): Flatten(start_dim=1, end_dim=-1)
    (fc1): Linear(in_features=4096, out_features=128, bias=True)
    (relu5): ReLU()
    (out): Linear(in_features=128, out_features=10, bias=True)
  )
)
--------------------------------------------------------------------



--------------------------------------------------------------------task3_model2_Thu_13_53
Final validation accuracy 0.7421999573707581
Final train accuracy 0.8195679187774658
Final test accuracy 0.7347999811172485
Final train loss 0.6039746999740601
Batch size: 64, Learning rate: 0.02
Optimizer: Average SGD, weight decay = 0.001 
Model2(
  (model): Sequential(
    (conv1): Conv2d(3, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (relu1): ReLU()
    (maxPool1): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (conv2): Conv2d(64, 128, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2))
    (relu2): ReLU()
    (maxPool2): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (conv3): Conv2d(128, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (relu3): ReLU()
    (maxPool3): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (flattern): Flatten(start_dim=1, end_dim=-1)
    (fc1): Linear(in_features=4096, out_features=128, bias=True)
    (relu5): ReLU()
    (out): Linear(in_features=128, out_features=10, bias=True)
  )
)
--------------------------------------------------------------------



--------------------------------------------------------------------task3_model2_Thu_14_03
Final validation accuracy 0.7569999694824219
Final train accuracy 0.8609530329704285
Final test accuracy 0.75
Final train loss 0.4136567711830139
Batch size: 64, Learning rate: 0.03
Optimizer: Average SGD, weight decay = 0.001 
Model2(
  (model): Sequential(
    (conv1): Conv2d(3, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (relu1): ReLU()
    (maxPool1): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (conv2): Conv2d(64, 128, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2))
    (relu2): ReLU()
    (maxPool2): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (conv3): Conv2d(128, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (relu3): ReLU()
    (maxPool3): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (flattern): Flatten(start_dim=1, end_dim=-1)
    (fc1): Linear(in_features=4096, out_features=128, bias=True)
    (relu5): ReLU()
    (out): Linear(in_features=128, out_features=10, bias=True)
  )
)
--------------------------------------------------------------------



--------------------------------------------------------------------task3_model1_Thu_15_00
Final validation accuracy 0.7595999836921692
Final train accuracy 0.8916444778442383
Final test accuracy 0.7511999607086182
Final train loss 0.32711702585220337
Batch size: 50, Learning rate: 0.02
Optimizer: Average SGD, weight decay = 0.001 
Model1(
  (model): Sequential(
    (conv1): Conv2d(3, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (relu1): ReLU()
    (maxPool1): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (conv2): Conv2d(32, 64, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2))
    (relu2): ReLU()
    (avgPool1): AvgPool2d(kernel_size=2, stride=2, padding=0)
    (conv3): Conv2d(64, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (batchNorm3): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (maxPool3): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (conv4): Conv2d(128, 256, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2))
    (relu4): ReLU()
    (flattern): Flatten(start_dim=1, end_dim=-1)
    (fc1): Linear(in_features=4096, out_features=128, bias=True)
    (relu5): ReLU()
    (fc2): Linear(in_features=128, out_features=64, bias=True)
    (relu6): ReLU()
    (out): Linear(in_features=64, out_features=10, bias=True)
  )
)
--------------------------------------------------------------------


